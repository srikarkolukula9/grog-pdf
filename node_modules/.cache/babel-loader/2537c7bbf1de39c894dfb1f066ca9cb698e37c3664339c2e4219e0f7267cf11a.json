{"ast":null,"code":"import axios from \"axios\";\nexport async function fetchColumnNames(csvFileName) {\n  try {\n    const response = await axios.post(\"/api/csv-column-names/\", {\n      csv_file_name: csvFileName\n    });\n    const {\n      column_names\n    } = response.data;\n    return column_names;\n  } catch (error) {\n    throw new Error(\"Failed to fetch column names.\");\n  }\n}","map":{"version":3,"names":["axios","fetchColumnNames","csvFileName","response","post","csv_file_name","column_names","data","error","Error"],"sources":["C:/Users/srika/Documents/GitHub/grog-pdf/src/pages/fetchColumnName.tsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport async function fetchColumnNames(csvFileName: string): Promise<string[]> {\r\n  try {\r\n    const response = await axios.post(\"/api/csv-column-names/\", {\r\n      csv_file_name: csvFileName,\r\n    });\r\n    const { column_names } = response.data;\r\n    return column_names;\r\n  } catch (error) {\r\n    throw new Error(\"Failed to fetch column names.\");\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,eAAeC,gBAAgBA,CAACC,WAAmB,EAAqB;EAC7E,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,wBAAwB,EAAE;MAC1DC,aAAa,EAAEH;IACjB,CAAC,CAAC;IACF,MAAM;MAAEI;IAAa,CAAC,GAAGH,QAAQ,CAACI,IAAI;IACtC,OAAOD,YAAY;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAClD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}