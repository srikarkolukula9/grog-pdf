{"ast":null,"code":"import _slicedToArray from \"C:/Users/srika/Documents/GitHub/Grog_pdf/locofy-react-project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useRef } from 'react';\nimport makeCancellable from 'make-cancellable-promise';\nimport clsx from 'clsx';\nimport invariant from 'tiny-invariant';\nimport warning from 'tiny-warning';\nimport * as pdfjs from 'pdfjs-dist';\nimport usePageContext from '../shared/hooks/usePageContext';\nimport useResolver from '../shared/hooks/useResolver';\nimport { cancelRunningTask } from '../shared/utils';\nfunction isTextItem(item) {\n  return 'str' in item;\n}\nexport default function TextLayer() {\n  var pageContext = usePageContext();\n  invariant(pageContext, 'Unable to find Page context.');\n  var customTextRenderer = pageContext.customTextRenderer,\n    onGetTextError = pageContext.onGetTextError,\n    onGetTextSuccess = pageContext.onGetTextSuccess,\n    onRenderTextLayerError = pageContext.onRenderTextLayerError,\n    onRenderTextLayerSuccess = pageContext.onRenderTextLayerSuccess,\n    page = pageContext.page,\n    pageIndex = pageContext.pageIndex,\n    pageNumber = pageContext.pageNumber,\n    rotate = pageContext.rotate,\n    scale = pageContext.scale;\n  var _useResolver = useResolver(),\n    _useResolver2 = _slicedToArray(_useResolver, 2),\n    textContentState = _useResolver2[0],\n    textContentDispatch = _useResolver2[1];\n  var textContent = textContentState.value,\n    textContentError = textContentState.error;\n  var layerElement = useRef(null);\n  var endElement = useRef();\n  invariant(page, 'Attempted to load page text content, but no page was specified.');\n  warning(parseInt(window.getComputedStyle(document.body).getPropertyValue('--react-pdf-text-layer'), 10) === 1, 'TextLayer styles not found. Read more: https://github.com/wojtekmaj/react-pdf#support-for-text-layer');\n  /**\n   * Called when a page text content is read successfully\n   */\n  function onLoadSuccess() {\n    if (!textContent) {\n      // Impossible, but TypeScript doesn't know that\n      return;\n    }\n    if (onGetTextSuccess) {\n      onGetTextSuccess(textContent);\n    }\n  }\n  /**\n   * Called when a page text content failed to read successfully\n   */\n  function onLoadError() {\n    if (!textContentError) {\n      // Impossible, but TypeScript doesn't know that\n      return;\n    }\n    warning(false, textContentError.toString());\n    if (onGetTextError) {\n      onGetTextError(textContentError);\n    }\n  }\n  function resetTextContent() {\n    textContentDispatch({\n      type: 'RESET'\n    });\n  }\n  useEffect(resetTextContent, [page, textContentDispatch]);\n  function loadTextContent() {\n    if (!page) {\n      return;\n    }\n    var cancellable = makeCancellable(page.getTextContent());\n    var runningTask = cancellable;\n    cancellable.promise.then(function (nextTextContent) {\n      textContentDispatch({\n        type: 'RESOLVE',\n        value: nextTextContent\n      });\n    }).catch(function (error) {\n      textContentDispatch({\n        type: 'REJECT',\n        error: error\n      });\n    });\n    return function () {\n      return cancelRunningTask(runningTask);\n    };\n  }\n  useEffect(loadTextContent, [page, textContentDispatch]);\n  useEffect(function () {\n    if (textContent === undefined) {\n      return;\n    }\n    if (textContent === false) {\n      onLoadError();\n      return;\n    }\n    onLoadSuccess();\n  },\n  // Ommitted callbacks so they are not called every time they change\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [textContent]);\n  /**\n   * Called when a text layer is rendered successfully\n   */\n  var onRenderSuccess = useCallback(function () {\n    if (onRenderTextLayerSuccess) {\n      onRenderTextLayerSuccess();\n    }\n  }, [onRenderTextLayerSuccess]);\n  /**\n   * Called when a text layer failed to render successfully\n   */\n  var onRenderError = useCallback(function (error) {\n    warning(false, error.toString());\n    if (onRenderTextLayerError) {\n      onRenderTextLayerError(error);\n    }\n  }, [onRenderTextLayerError]);\n  function onMouseDown() {\n    var end = endElement.current;\n    if (!end) {\n      return;\n    }\n    end.classList.add('active');\n  }\n  function onMouseUp() {\n    var end = endElement.current;\n    if (!end) {\n      return;\n    }\n    end.classList.remove('active');\n  }\n  var viewport = useMemo(function () {\n    return page.getViewport({\n      scale: scale,\n      rotation: rotate\n    });\n  }, [page, rotate, scale]);\n  function renderTextLayer() {\n    if (!page || !textContent) {\n      return;\n    }\n    var layer = layerElement.current;\n    if (!layer) {\n      return;\n    }\n    layer.innerHTML = '';\n    var textContentSource = page.streamTextContent({\n      includeMarkedContent: true\n    });\n    var parameters = {\n      container: layer,\n      textContentSource: textContentSource,\n      viewport: viewport\n    };\n    var cancellable = pdfjs.renderTextLayer(parameters);\n    var runningTask = cancellable;\n    cancellable.promise.then(function () {\n      var end = document.createElement('div');\n      end.className = 'endOfContent';\n      layer.append(end);\n      endElement.current = end;\n      var hasMarkedContent = Boolean(layer.querySelector('.markedContent'));\n      var layerChildren = hasMarkedContent ? layer.querySelectorAll('.markedContent > *:not(.markedContent') : layer.children;\n      if (customTextRenderer) {\n        var index = 0;\n        textContent.items.forEach(function (item, itemIndex) {\n          if (!isTextItem(item)) {\n            return;\n          }\n          var child = layerChildren[index];\n          if (!child) {\n            return;\n          }\n          var content = customTextRenderer(Object.assign({\n            pageIndex: pageIndex,\n            pageNumber: pageNumber,\n            itemIndex: itemIndex\n          }, item));\n          child.innerHTML = content;\n          index += item.str && item.hasEOL ? 2 : 1;\n        });\n      }\n      // Intentional immediate callback\n      onRenderSuccess();\n    }).catch(onRenderError);\n    return function () {\n      return cancelRunningTask(runningTask);\n    };\n  }\n  useLayoutEffect(renderTextLayer, [customTextRenderer, onRenderError, onRenderSuccess, page, pageIndex, pageNumber, textContent, viewport]);\n  return (\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    React.createElement(\"div\", {\n      className: clsx('react-pdf__Page__textContent', 'textLayer'),\n      onMouseUp: onMouseUp,\n      onMouseDown: onMouseDown,\n      ref: layerElement\n    })\n  );\n}","map":{"version":3,"names":["React","useCallback","useEffect","useLayoutEffect","useMemo","useRef","makeCancellable","clsx","invariant","warning","pdfjs","usePageContext","useResolver","cancelRunningTask","isTextItem","item","TextLayer","pageContext","customTextRenderer","onGetTextError","onGetTextSuccess","onRenderTextLayerError","onRenderTextLayerSuccess","page","pageIndex","pageNumber","rotate","scale","_useResolver","_useResolver2","_slicedToArray","textContentState","textContentDispatch","textContent","value","textContentError","error","layerElement","endElement","parseInt","window","getComputedStyle","document","body","getPropertyValue","onLoadSuccess","onLoadError","toString","resetTextContent","type","loadTextContent","cancellable","getTextContent","runningTask","promise","then","nextTextContent","catch","undefined","onRenderSuccess","onRenderError","onMouseDown","end","current","classList","add","onMouseUp","remove","viewport","getViewport","rotation","renderTextLayer","layer","innerHTML","textContentSource","streamTextContent","includeMarkedContent","parameters","container","createElement","className","append","hasMarkedContent","Boolean","querySelector","layerChildren","querySelectorAll","children","index","items","forEach","itemIndex","child","content","Object","assign","str","hasEOL","ref"],"sources":["C:/Users/srika/Documents/GitHub/Grog_pdf/locofy-react-project/node_modules/react-pdf/dist/esm/Page/TextLayer.js"],"sourcesContent":["import React, { useCallback, useEffect, useLayoutEffect, useMemo, useRef } from 'react';\nimport makeCancellable from 'make-cancellable-promise';\nimport clsx from 'clsx';\nimport invariant from 'tiny-invariant';\nimport warning from 'tiny-warning';\nimport * as pdfjs from 'pdfjs-dist';\nimport usePageContext from '../shared/hooks/usePageContext';\nimport useResolver from '../shared/hooks/useResolver';\nimport { cancelRunningTask } from '../shared/utils';\nfunction isTextItem(item) {\n    return 'str' in item;\n}\nexport default function TextLayer() {\n    const pageContext = usePageContext();\n    invariant(pageContext, 'Unable to find Page context.');\n    const { customTextRenderer, onGetTextError, onGetTextSuccess, onRenderTextLayerError, onRenderTextLayerSuccess, page, pageIndex, pageNumber, rotate, scale, } = pageContext;\n    const [textContentState, textContentDispatch] = useResolver();\n    const { value: textContent, error: textContentError } = textContentState;\n    const layerElement = useRef(null);\n    const endElement = useRef();\n    invariant(page, 'Attempted to load page text content, but no page was specified.');\n    warning(parseInt(window.getComputedStyle(document.body).getPropertyValue('--react-pdf-text-layer'), 10) === 1, 'TextLayer styles not found. Read more: https://github.com/wojtekmaj/react-pdf#support-for-text-layer');\n    /**\n     * Called when a page text content is read successfully\n     */\n    function onLoadSuccess() {\n        if (!textContent) {\n            // Impossible, but TypeScript doesn't know that\n            return;\n        }\n        if (onGetTextSuccess) {\n            onGetTextSuccess(textContent);\n        }\n    }\n    /**\n     * Called when a page text content failed to read successfully\n     */\n    function onLoadError() {\n        if (!textContentError) {\n            // Impossible, but TypeScript doesn't know that\n            return;\n        }\n        warning(false, textContentError.toString());\n        if (onGetTextError) {\n            onGetTextError(textContentError);\n        }\n    }\n    function resetTextContent() {\n        textContentDispatch({ type: 'RESET' });\n    }\n    useEffect(resetTextContent, [page, textContentDispatch]);\n    function loadTextContent() {\n        if (!page) {\n            return;\n        }\n        const cancellable = makeCancellable(page.getTextContent());\n        const runningTask = cancellable;\n        cancellable.promise\n            .then((nextTextContent) => {\n            textContentDispatch({ type: 'RESOLVE', value: nextTextContent });\n        })\n            .catch((error) => {\n            textContentDispatch({ type: 'REJECT', error });\n        });\n        return () => cancelRunningTask(runningTask);\n    }\n    useEffect(loadTextContent, [page, textContentDispatch]);\n    useEffect(() => {\n        if (textContent === undefined) {\n            return;\n        }\n        if (textContent === false) {\n            onLoadError();\n            return;\n        }\n        onLoadSuccess();\n    }, \n    // Ommitted callbacks so they are not called every time they change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [textContent]);\n    /**\n     * Called when a text layer is rendered successfully\n     */\n    const onRenderSuccess = useCallback(() => {\n        if (onRenderTextLayerSuccess) {\n            onRenderTextLayerSuccess();\n        }\n    }, [onRenderTextLayerSuccess]);\n    /**\n     * Called when a text layer failed to render successfully\n     */\n    const onRenderError = useCallback((error) => {\n        warning(false, error.toString());\n        if (onRenderTextLayerError) {\n            onRenderTextLayerError(error);\n        }\n    }, [onRenderTextLayerError]);\n    function onMouseDown() {\n        const end = endElement.current;\n        if (!end) {\n            return;\n        }\n        end.classList.add('active');\n    }\n    function onMouseUp() {\n        const end = endElement.current;\n        if (!end) {\n            return;\n        }\n        end.classList.remove('active');\n    }\n    const viewport = useMemo(() => page.getViewport({ scale, rotation: rotate }), [page, rotate, scale]);\n    function renderTextLayer() {\n        if (!page || !textContent) {\n            return;\n        }\n        const { current: layer } = layerElement;\n        if (!layer) {\n            return;\n        }\n        layer.innerHTML = '';\n        const textContentSource = page.streamTextContent({ includeMarkedContent: true });\n        const parameters = {\n            container: layer,\n            textContentSource,\n            viewport,\n        };\n        const cancellable = pdfjs.renderTextLayer(parameters);\n        const runningTask = cancellable;\n        cancellable.promise\n            .then(() => {\n            const end = document.createElement('div');\n            end.className = 'endOfContent';\n            layer.append(end);\n            endElement.current = end;\n            const hasMarkedContent = Boolean(layer.querySelector('.markedContent'));\n            const layerChildren = hasMarkedContent\n                ? layer.querySelectorAll('.markedContent > *:not(.markedContent')\n                : layer.children;\n            if (customTextRenderer) {\n                let index = 0;\n                textContent.items.forEach((item, itemIndex) => {\n                    if (!isTextItem(item)) {\n                        return;\n                    }\n                    const child = layerChildren[index];\n                    if (!child) {\n                        return;\n                    }\n                    const content = customTextRenderer(Object.assign({ pageIndex,\n                        pageNumber,\n                        itemIndex }, item));\n                    child.innerHTML = content;\n                    index += item.str && item.hasEOL ? 2 : 1;\n                });\n            }\n            // Intentional immediate callback\n            onRenderSuccess();\n        })\n            .catch(onRenderError);\n        return () => cancelRunningTask(runningTask);\n    }\n    useLayoutEffect(renderTextLayer, [\n        customTextRenderer,\n        onRenderError,\n        onRenderSuccess,\n        page,\n        pageIndex,\n        pageNumber,\n        textContent,\n        viewport,\n    ]);\n    return (\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    React.createElement(\"div\", { className: clsx('react-pdf__Page__textContent', 'textLayer'), onMouseUp: onMouseUp, onMouseDown: onMouseDown, ref: layerElement }));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}