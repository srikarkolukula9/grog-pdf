{"ast":null,"code":"// import axios from \"axios\";\n\n// export async function fetchColumnNames(csvFileName: string): Promise<string[]> {\n//   try {\n//     const response = await axios.post(\"/api/csv-column-names/\", {\n//       csv_file_name: csvFileName,\n//     });\n//     const { column_names } = response.data;\n//     console.log(response.data);\n//     return column_names;\n//   } catch (error) {\n//     throw new Error(\"Failed to fetch column names.\");\n//   }\n// }\nimport axios from \"axios\";\n// export async function fetchColumnNames(): Promise<string[]> {\n//   try {\n//     const response = await axios.get(\"http://127.0.0.1:8000/api/csv-header/\");\n//     const { column_names } = response.data;\n//     console.log(response.data);\n//     // const mapper = column_names.map((column: any) => {\n//     //   <ColumnBox name={column} link={true} />;\n//     // });\n//     return column_names;\n//   } catch (error) {\n//     throw new Error(\"Failed to fetch column names.\");\n//   }\n// }\nexport const columnFetcher = () => {\n  axios({\n    url: \"http://127.0.0.1:8000/api/csv-header/\",\n    method: \"GET\"\n  }).then(res => {\n    console.log(res);\n    return res;\n  });\n  return;\n};","map":{"version":3,"names":["axios","columnFetcher","url","method","then","res","console","log"],"sources":["C:/Users/srika/Documents/GitHub/grog-pdf/src/pages/fetchColumnName.tsx"],"sourcesContent":["// import axios from \"axios\";\r\n\r\n// export async function fetchColumnNames(csvFileName: string): Promise<string[]> {\r\n//   try {\r\n//     const response = await axios.post(\"/api/csv-column-names/\", {\r\n//       csv_file_name: csvFileName,\r\n//     });\r\n//     const { column_names } = response.data;\r\n//     console.log(response.data);\r\n//     return column_names;\r\n//   } catch (error) {\r\n//     throw new Error(\"Failed to fetch column names.\");\r\n//   }\r\n// }\r\nimport axios from \"axios\";\r\nimport ColumnBox from \"./ColumnBox\";\r\n\r\n// export async function fetchColumnNames(): Promise<string[]> {\r\n//   try {\r\n//     const response = await axios.get(\"http://127.0.0.1:8000/api/csv-header/\");\r\n//     const { column_names } = response.data;\r\n//     console.log(response.data);\r\n//     // const mapper = column_names.map((column: any) => {\r\n//     //   <ColumnBox name={column} link={true} />;\r\n//     // });\r\n//     return column_names;\r\n//   } catch (error) {\r\n//     throw new Error(\"Failed to fetch column names.\");\r\n//   }\r\n// }\r\n\r\nexport const columnFetcher = () => {\r\n  axios({\r\n    url: \"http://127.0.0.1:8000/api/csv-header/\",\r\n    method: \"GET\",\r\n  }).then((res) => {\r\n    console.log(res);\r\n    return res;\r\n  });\r\n  return;\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjCD,KAAK,CAAC;IACJE,GAAG,EAAE,uCAAuC;IAC5CC,MAAM,EAAE;EACV,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;IACfC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChB,OAAOA,GAAG;EACZ,CAAC,CAAC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}