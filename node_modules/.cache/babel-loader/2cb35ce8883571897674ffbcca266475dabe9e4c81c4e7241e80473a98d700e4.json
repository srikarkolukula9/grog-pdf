{"ast":null,"code":"import _classCallCheck from \"C:/Users/srika/Documents/GitHub/Grog_pdf/locofy-react-project/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/srika/Documents/GitHub/Grog_pdf/locofy-react-project/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport invariant from 'tiny-invariant';\nvar DEFAULT_LINK_REL = 'noopener noreferrer nofollow';\nvar LinkService = /*#__PURE__*/function () {\n  function LinkService() {\n    _classCallCheck(this, LinkService);\n    this.externalLinkEnabled = true;\n    this.externalLinkRel = undefined;\n    this.externalLinkTarget = undefined;\n    this.isInPresentationMode = false;\n    this.pdfDocument = undefined;\n    this.pdfViewer = undefined;\n  }\n  _createClass(LinkService, [{\n    key: \"setDocument\",\n    value: function setDocument(pdfDocument) {\n      this.pdfDocument = pdfDocument;\n    }\n  }, {\n    key: \"setViewer\",\n    value: function setViewer(pdfViewer) {\n      this.pdfViewer = pdfViewer;\n    }\n  }, {\n    key: \"setExternalLinkRel\",\n    value: function setExternalLinkRel(externalLinkRel) {\n      this.externalLinkRel = externalLinkRel;\n    }\n  }, {\n    key: \"setExternalLinkTarget\",\n    value: function setExternalLinkTarget(externalLinkTarget) {\n      this.externalLinkTarget = externalLinkTarget;\n    }\n  }, {\n    key: \"setHistory\",\n    value: function setHistory() {\n      // Intentionally empty\n    }\n  }, {\n    key: \"pagesCount\",\n    get: function get() {\n      return this.pdfDocument ? this.pdfDocument.numPages : 0;\n    }\n  }, {\n    key: \"page\",\n    get: function get() {\n      invariant(this.pdfViewer, 'PDF viewer is not initialized.');\n      return this.pdfViewer.currentPageNumber || 0;\n    },\n    set: function set(value) {\n      invariant(this.pdfViewer, 'PDF viewer is not initialized.');\n      this.pdfViewer.currentPageNumber = value;\n    }\n  }, {\n    key: \"rotation\",\n    get: function get() {\n      return 0;\n    },\n    set: function set(value) {\n      // Intentionally empty\n    }\n  }, {\n    key: \"goToDestination\",\n    value: function goToDestination(dest) {\n      var _this = this;\n      return new Promise(function (resolve) {\n        invariant(_this.pdfDocument, 'PDF document not loaded.');\n        invariant(dest, 'Destination is not specified.');\n        if (typeof dest === 'string') {\n          _this.pdfDocument.getDestination(dest).then(resolve);\n        } else if (Array.isArray(dest)) {\n          resolve(dest);\n        } else {\n          dest.then(resolve);\n        }\n      }).then(function (explicitDest) {\n        invariant(Array.isArray(explicitDest), \"\\\"\".concat(explicitDest, \"\\\" is not a valid destination array.\"));\n        var destRef = explicitDest[0];\n        new Promise(function (resolve) {\n          invariant(_this.pdfDocument, 'PDF document not loaded.');\n          if (destRef instanceof Object) {\n            _this.pdfDocument.getPageIndex(destRef).then(function (pageIndex) {\n              resolve(pageIndex);\n            }).catch(function () {\n              invariant(false, \"\\\"\".concat(destRef, \"\\\" is not a valid page reference.\"));\n            });\n          } else if (typeof destRef === 'number') {\n            resolve(destRef);\n          } else {\n            invariant(false, \"\\\"\".concat(destRef, \"\\\" is not a valid destination reference.\"));\n          }\n        }).then(function (pageIndex) {\n          var pageNumber = pageIndex + 1;\n          invariant(_this.pdfViewer, 'PDF viewer is not initialized.');\n          invariant(pageNumber >= 1 && pageNumber <= _this.pagesCount, \"\\\"\".concat(pageNumber, \"\\\" is not a valid page number.\"));\n          _this.pdfViewer.scrollPageIntoView({\n            dest: explicitDest,\n            pageIndex: pageIndex,\n            pageNumber: pageNumber\n          });\n        });\n      });\n    }\n  }, {\n    key: \"navigateTo\",\n    value: function navigateTo(dest) {\n      this.goToDestination(dest);\n    }\n  }, {\n    key: \"goToPage\",\n    value: function goToPage(pageNumber) {\n      var pageIndex = pageNumber - 1;\n      invariant(this.pdfViewer, 'PDF viewer is not initialized.');\n      invariant(pageNumber >= 1 && pageNumber <= this.pagesCount, \"\\\"\".concat(pageNumber, \"\\\" is not a valid page number.\"));\n      this.pdfViewer.scrollPageIntoView({\n        pageIndex: pageIndex,\n        pageNumber: pageNumber\n      });\n    }\n  }, {\n    key: \"addLinkAttributes\",\n    value: function addLinkAttributes(link, url, newWindow) {\n      link.href = url;\n      link.rel = this.externalLinkRel || DEFAULT_LINK_REL;\n      link.target = newWindow ? '_blank' : this.externalLinkTarget || '';\n    }\n  }, {\n    key: \"getDestinationHash\",\n    value: function getDestinationHash() {\n      return '#';\n    }\n  }, {\n    key: \"getAnchorUrl\",\n    value: function getAnchorUrl() {\n      return '#';\n    }\n  }, {\n    key: \"setHash\",\n    value: function setHash() {\n      // Intentionally empty\n    }\n  }, {\n    key: \"executeNamedAction\",\n    value: function executeNamedAction() {\n      // Intentionally empty\n    }\n  }, {\n    key: \"cachePageRef\",\n    value: function cachePageRef() {\n      // Intentionally empty\n    }\n  }, {\n    key: \"isPageVisible\",\n    value: function isPageVisible() {\n      return true;\n    }\n  }, {\n    key: \"isPageCached\",\n    value: function isPageCached() {\n      return true;\n    }\n  }, {\n    key: \"executeSetOCGState\",\n    value: function executeSetOCGState() {\n      // Intentionally empty\n    }\n  }]);\n  return LinkService;\n}();\nexport { LinkService as default };","map":{"version":3,"names":["invariant","DEFAULT_LINK_REL","LinkService","_classCallCheck","externalLinkEnabled","externalLinkRel","undefined","externalLinkTarget","isInPresentationMode","pdfDocument","pdfViewer","_createClass","key","value","setDocument","setViewer","setExternalLinkRel","setExternalLinkTarget","setHistory","get","numPages","currentPageNumber","set","goToDestination","dest","_this","Promise","resolve","getDestination","then","Array","isArray","explicitDest","concat","destRef","Object","getPageIndex","pageIndex","catch","pageNumber","pagesCount","scrollPageIntoView","navigateTo","goToPage","addLinkAttributes","link","url","newWindow","href","rel","target","getDestinationHash","getAnchorUrl","setHash","executeNamedAction","cachePageRef","isPageVisible","isPageCached","executeSetOCGState","default"],"sources":["C:/Users/srika/Documents/GitHub/Grog_pdf/locofy-react-project/node_modules/react-pdf/dist/esm/LinkService.js"],"sourcesContent":["/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport invariant from 'tiny-invariant';\nconst DEFAULT_LINK_REL = 'noopener noreferrer nofollow';\nexport default class LinkService {\n    constructor() {\n        this.externalLinkEnabled = true;\n        this.externalLinkRel = undefined;\n        this.externalLinkTarget = undefined;\n        this.isInPresentationMode = false;\n        this.pdfDocument = undefined;\n        this.pdfViewer = undefined;\n    }\n    setDocument(pdfDocument) {\n        this.pdfDocument = pdfDocument;\n    }\n    setViewer(pdfViewer) {\n        this.pdfViewer = pdfViewer;\n    }\n    setExternalLinkRel(externalLinkRel) {\n        this.externalLinkRel = externalLinkRel;\n    }\n    setExternalLinkTarget(externalLinkTarget) {\n        this.externalLinkTarget = externalLinkTarget;\n    }\n    setHistory() {\n        // Intentionally empty\n    }\n    get pagesCount() {\n        return this.pdfDocument ? this.pdfDocument.numPages : 0;\n    }\n    get page() {\n        invariant(this.pdfViewer, 'PDF viewer is not initialized.');\n        return this.pdfViewer.currentPageNumber || 0;\n    }\n    set page(value) {\n        invariant(this.pdfViewer, 'PDF viewer is not initialized.');\n        this.pdfViewer.currentPageNumber = value;\n    }\n    get rotation() {\n        return 0;\n    }\n    set rotation(value) {\n        // Intentionally empty\n    }\n    goToDestination(dest) {\n        return new Promise((resolve) => {\n            invariant(this.pdfDocument, 'PDF document not loaded.');\n            invariant(dest, 'Destination is not specified.');\n            if (typeof dest === 'string') {\n                this.pdfDocument.getDestination(dest).then(resolve);\n            }\n            else if (Array.isArray(dest)) {\n                resolve(dest);\n            }\n            else {\n                dest.then(resolve);\n            }\n        }).then((explicitDest) => {\n            invariant(Array.isArray(explicitDest), `\"${explicitDest}\" is not a valid destination array.`);\n            const destRef = explicitDest[0];\n            new Promise((resolve) => {\n                invariant(this.pdfDocument, 'PDF document not loaded.');\n                if (destRef instanceof Object) {\n                    this.pdfDocument\n                        .getPageIndex(destRef)\n                        .then((pageIndex) => {\n                        resolve(pageIndex);\n                    })\n                        .catch(() => {\n                        invariant(false, `\"${destRef}\" is not a valid page reference.`);\n                    });\n                }\n                else if (typeof destRef === 'number') {\n                    resolve(destRef);\n                }\n                else {\n                    invariant(false, `\"${destRef}\" is not a valid destination reference.`);\n                }\n            }).then((pageIndex) => {\n                const pageNumber = pageIndex + 1;\n                invariant(this.pdfViewer, 'PDF viewer is not initialized.');\n                invariant(pageNumber >= 1 && pageNumber <= this.pagesCount, `\"${pageNumber}\" is not a valid page number.`);\n                this.pdfViewer.scrollPageIntoView({\n                    dest: explicitDest,\n                    pageIndex,\n                    pageNumber,\n                });\n            });\n        });\n    }\n    navigateTo(dest) {\n        this.goToDestination(dest);\n    }\n    goToPage(pageNumber) {\n        const pageIndex = pageNumber - 1;\n        invariant(this.pdfViewer, 'PDF viewer is not initialized.');\n        invariant(pageNumber >= 1 && pageNumber <= this.pagesCount, `\"${pageNumber}\" is not a valid page number.`);\n        this.pdfViewer.scrollPageIntoView({\n            pageIndex,\n            pageNumber,\n        });\n    }\n    addLinkAttributes(link, url, newWindow) {\n        link.href = url;\n        link.rel = this.externalLinkRel || DEFAULT_LINK_REL;\n        link.target = newWindow ? '_blank' : this.externalLinkTarget || '';\n    }\n    getDestinationHash() {\n        return '#';\n    }\n    getAnchorUrl() {\n        return '#';\n    }\n    setHash() {\n        // Intentionally empty\n    }\n    executeNamedAction() {\n        // Intentionally empty\n    }\n    cachePageRef() {\n        // Intentionally empty\n    }\n    isPageVisible() {\n        return true;\n    }\n    isPageCached() {\n        return true;\n    }\n    executeSetOCGState() {\n        // Intentionally empty\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}