{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srika\\\\Documents\\\\GitHub\\\\grog-pdf\\\\src\\\\pages\\\\fetchColumnName.js\";\n// import axios from \"axios\";\n\n// export async function fetchColumnNames(csvFileName: string): Promise<string[]> {\n//   try {\n//     const response = await axios.post(\"/api/csv-column-names/\", {\n//       csv_file_name: csvFileName,\n//     });\n//     const { column_names } = response.data;\n//     console.log(response.data);\n//     return column_names;\n//   } catch (error) {\n//     throw new Error(\"Failed to fetch column names.\");\n//   }\n// }\nimport axios from \"axios\";\nimport ColumnBox from \"./ColumnBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function fetchColumnNames() {\n  try {\n    const response = await axios.get(\"http://127.0.0.1:8000/api/csv-header/\");\n    const {\n      column_names\n    } = response.data;\n    console.log(response.data);\n    const mapper = column_names.map(column => {\n      /*#__PURE__*/_jsxDEV(ColumnBox, {\n        name: column,\n        link: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this);\n    });\n    return mapper;\n  } catch (error) {\n    throw new Error(\"Failed to fetch column names.\");\n  }\n}\n\n// export const columnFetcher = () => {\n//   axios({\n//     url: \"http://127.0.0.1:8000/api/csv-header/\",\n//     method: \"GET\",\n//   }).then((res) => {\n//     console.log(res);\n//     return res;\n//   });\n// };","map":{"version":3,"names":["axios","ColumnBox","jsxDEV","_jsxDEV","fetchColumnNames","response","get","column_names","data","console","log","mapper","map","column","name","link","fileName","_jsxFileName","lineNumber","columnNumber","error","Error"],"sources":["C:/Users/srika/Documents/GitHub/grog-pdf/src/pages/fetchColumnName.js"],"sourcesContent":["// import axios from \"axios\";\r\n\r\n// export async function fetchColumnNames(csvFileName: string): Promise<string[]> {\r\n//   try {\r\n//     const response = await axios.post(\"/api/csv-column-names/\", {\r\n//       csv_file_name: csvFileName,\r\n//     });\r\n//     const { column_names } = response.data;\r\n//     console.log(response.data);\r\n//     return column_names;\r\n//   } catch (error) {\r\n//     throw new Error(\"Failed to fetch column names.\");\r\n//   }\r\n// }\r\nimport axios from \"axios\";\r\nimport ColumnBox from \"./ColumnBox\";\r\n\r\nexport async function fetchColumnNames(){\r\n  try {\r\n    const response = await axios.get (\"http://127.0.0.1:8000/api/csv-header/\");\r\n    const { column_names } = response.data;\r\n    console.log(response.data);\r\n    const mapper = column_names.map((column) => {\r\n      <ColumnBox name={column} link={true} />;\r\n    });\r\n    return mapper\r\n  } catch (error) {\r\n    throw new Error(\"Failed to fetch column names.\");\r\n  }\r\n}\r\n\r\n// export const columnFetcher = () => {\r\n//   axios({\r\n//     url: \"http://127.0.0.1:8000/api/csv-header/\",\r\n//     method: \"GET\",\r\n//   }).then((res) => {\r\n//     console.log(res);\r\n//     return res;\r\n//   });\r\n// };\r\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,OAAO,eAAeC,gBAAgBA,CAAA,EAAE;EACtC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,uCAAuC,CAAC;IAC1E,MAAM;MAAEC;IAAa,CAAC,GAAGF,QAAQ,CAACG,IAAI;IACtCC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACG,IAAI,CAAC;IAC1B,MAAMG,MAAM,GAAGJ,YAAY,CAACK,GAAG,CAAEC,MAAM,IAAK;MAC1C,aAAAV,OAAA,CAACF,SAAS;QAACa,IAAI,EAAED,MAAO;QAACE,IAAI,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACzC,CAAC,CAAC;IACF,OAAOR,MAAM;EACf,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAClD;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}